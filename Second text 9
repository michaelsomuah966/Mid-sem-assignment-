import java.util.Scanner;

public class CubicEquationSolver {

    
    public static void findCubicRoots(double a, double b, double c, double d) {
        
        double delta0 = b * b - 3 * a * c;
        double delta1 = 2 * b * b * b - 9 * a * b * c + 27 * a * a * d;
        double discriminant = delta1 * delta1 - 4 * delta0 * delta0 * delta0;

        
        if (discriminant >= 0) {
            double C = Math.cbrt((delta1 + Math.sqrt(discriminant)) / 2); 

            
            double realRoot1 = -1 / (3 * a) * (b + C + delta0 / C);

            
            System.out.println("Real root: " + realRoot1);
        } else {
            
            double realRoot1 = -1 / (3 * a) * (b + Math.cbrt((delta1 + Math.sqrt(-discriminant)) / 2));
            System.out.println("Real root: " + realRoot1);
            System.out.println("The equation has two complex conjugate roots.");
        }
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        
        System.out.print("Enter coefficient a: ");
        double a = scanner.nextDouble();
        System.out.print("Enter coefficient b: ");
        double b = scanner.nextDouble();
        System.out.print("Enter coefficient c: ");
        double c = scanner.nextDouble();
        System.out.print("Enter coefficient d: ");
        double d = scanner.nextDouble();

        
        findCubicRoots(a, b, c, d);

        scanner.close();
    }
}
